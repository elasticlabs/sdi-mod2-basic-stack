log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';

#
# Set resolver to docker default DNS
resolver 127.0.0.11 valid=30s;

# server blocks definition
server {
        server_name hub.ensg-sdi.docker;
        listen 80 ;
        access_log /var/log/nginx/access.log vhost;
        
        #
        # -> We store DSI apps in a separate file
        #include /etc/nginx/conf.d/sdi-apps.conf;

        ##
        # -> Portainer
        location /portainer {
            return 301 $scheme://$host/portainer/;
        }

        location ^~ /portainer/ {
            # enable for Authelia (requires authelia-server.conf in the server block)
            #include /config/nginx/snippets/authelia-authrequest.conf;

            include /etc/nginx/proxy.conf;
            # include /config/nginx/resolver.conf;
            set $upstream_app portainer;
            set $upstream_port 9000;
            set $upstream_proto http;
            proxy_pass $upstream_proto://$upstream_app:$upstream_port;

            rewrite /portainer(.*) $1 break;
        proxy_hide_header X-Frame-Options; # Possibly not needed after Portainer 1.20.0
        }

        location ^~ /portainer/api {
            include /etc/nginx/proxy.conf;
            # include /config/nginx/resolver.conf;
            set $upstream_app portainer;
            set $upstream_port 9000;
            set $upstream_proto http;
            proxy_pass $upstream_proto://$upstream_app:$upstream_port;

            rewrite /portainer(.*) $1 break;
            proxy_hide_header X-Frame-Options; # Possibly not needed after Portainer 1.20.0
        }
        ##

       ##
       # -> homepage : admin dashboard for our sdi
       location / {
       # enable for authelia (requires authelia-server.conf in the server block)
       #include /config/nginx/snippets/authelia-authrequest.conf;

       proxy_pass http://homepage:3000;

       #include /etc/nginx/proxy.conf;
       }
       ##

       ##
       # -> filebrowser : files admin web gui for our stack
       location /data {
           # prevents 502 bad gateway error
           proxy_buffers 8 32k;
           proxy_buffer_size 64k;
           client_max_body_size 75m;

           # redirect all http traffic to localhost:8088;
           proxy_pass http://filebrowser:8080;
           proxy_set_header x-real-ip $remote_addr;
           proxy_set_header host $http_host;
           proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
           #proxy_set_header x-nginx-proxy true;

           # enables ws support
           proxy_http_version 1.1;
           proxy_set_header upgrade $http_upgrade;
           proxy_set_header connection "upgrade";
           proxy_read_timeout 999999999;
       }

               # -> Geoserver
        # See (https://github.com/kartoza/docker-geoserver)
        location /geoserver {
            proxy_pass http://geoserver:8080/geoserver;
            proxy_set_header    Host            $host;
            proxy_set_header    X-Real-IP       $remote_addr;
            proxy_set_header    X-Forwarded-for $remote_addr;
            port_in_redirect off;
            proxy_connect_timeout 600;
            proxy_set_header X-Script-Name /geoserver;
        }
                # -> pgadmin
        # See (https://www.pgadmin.org/docs/pgadmin4/6.21/container_deployment.html#http-via-nginx)
        location /pgadmin {
            proxy_set_header X-Script-Name /pgadmin;
            proxy_set_header Host $host;
            proxy_pass http://pgadmin/;
            proxy_redirect off;
        }
        
    }
